/*=============================
=          Visuals            =
=============================*/

@mixin img($width: 100%) {
    display: block;
    max-width: $width;
    height: auto;
}

@mixin object-fit($fit: cover, $position: 50% 50%, $var-prefix: "obj") {
    $valid-fit: cover, contain, fill, none, scale-down;
    @if not index($valid-fit, $fit) {
        @error "'#{$fit}' is not a valid fit. Choose between : #{$valid-fit}.";
    }

    width: var(--#{$var-prefix}-width, 100%);
    height: var(--#{$var-prefix}-height, 100%);
    object-fit: var(--#{$var-prefix}-object-fit, $fit);
    object-position: var(--#{$var-prefix}-object-position, $position);
}

// Pure CSS triangle
@mixin triangle(
    $direction,
    $triangle-width,
    $triangle-height,
    $triangle-color
) {
    display: block;
    width: 0;
    height: 0;
    border-style: solid;

    @if $direction == up {
        border-color: transparent transparent $triangle-color;
        border-width: 0 ($triangle-width * 0.5) $triangle-height;
    } @else if $direction == right {
        border-color: transparent transparent transparent $triangle-color;
        border-width: ($triangle-height * 0.5)
            0
            ($triangle-height * 0.5)
            $triangle-width;
    } @else if $direction == down {
        border-color: $triangle-color transparent transparent;
        border-width: $triangle-height ($triangle-width * 0.5) 0;
    } @else if $direction == left {
        border-color: transparent $triangle-color transparent transparent;
        border-width: ($triangle-height * 0.5)
            $triangle-width
            ($triangle-height * 0.5)
            0;
    } @else {
        @error "The direction `#{$direction}` is not allowed, choose between up, right, down, left. Property omitted";
    }
}

/**
   * Mixin printing a linear-gradient
   * as well as a plain color fallback
   * and the `-webkit-` prefixed declaration
   * @param {String | List | Angle} $direction - Linear gradient direction
   * @param {Arglist} $color-stops - List of color-stops composing the gradient
   */
@mixin linear-gradient($direction, $color-stops...) {
    @if is-direction($direction) == false {
        $color-stops: ($direction, $color-stops);
        $direction: 180deg;
    }

    background: nth(nth($color-stops, 1), 1);
    background: linear-gradient($direction, $color-stops);
}
