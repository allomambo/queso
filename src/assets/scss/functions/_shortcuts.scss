/*=================================
=           Shortcuts             =
=================================*/

/**
 * Shortcut to avoid having to type a css variable and its default with the same name everytime
 *
 * @param  {string} $var     The name of the css variable
 * @param  {string} $default The default value to use if the variable is not set
 * @return {string}          A css variable with a default var() of the same name
 *
 * @example 
 *     font-size: dvar(--heading-font-size); ↴
 *     font-size: var(--heading-font-size, var(--heading-font-size-default));
 *
 * @example 
 *     font-size: dvar(--button-color, red); ↴
 *     font-size: var(--button-color, var(--button-color-default, red));
 */
@function dvar($var, $default: null) {
    @if not $var {
        @error "You must pass a variable name.";
    }

    // Legacy support: Add double dash if the variable doesn't starts with it
    $var: if(str-index($var, "--") != 1, "--#{$var}", $var);

    @return var(
        #{$var},
        if(not $default, var(#{$var}-default), var(#{$var}-default, $default))
    );
}

/**
 * Shortcut for multiplications based on a factor and a variable.
 * 
 * @param  {string} $factor Multiplier to adjust the value (default: 1)
 * @param  {string} $var    Customizable variable representing the base value (default: var(--spacer))
 * @return {string}         The multiplied value using the formula: calc($var * $factor)
 * 
 * @example
 *      margin: multiply(2); // Calculates 2 times the default value
 *      padding: multiply(0.5, var(--custom)); // Calculates half of a custom variable
 */
@function multiply($factor: 1, $var: var(--spacer)) {
    @return calc(#{$var} * $factor);
}

/**
 * A function helper to avoid having to type `map-get($directories, ...)` to output a given font-size
 * @param  {string} $dir The name of the directory
 * @return {string}      The corresponding directory path
 */
@function dir($dir) {
    @if not map-has-key($directories, $dir) {
        @error "No directory found in `#{$directories}` map for `#{$dir}`. Property omitted.";
    }

    $value: map-get($directories, $dir);
    @return $value;
}
